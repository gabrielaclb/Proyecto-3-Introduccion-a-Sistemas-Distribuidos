version: '3'
volumes:
  mysql-api:
  mysql-admins:
  mysql-users:
services:
  mysql-api:
    image: mysql
    container_name: mysql-api
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: "secret"
    ports:
      - "33061:3306"
    volumes:
      - mysql-api:/var/lib/mysql
      - ./DB-API/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
  mysql-admin:
    image: mysql
    container_name: mysql-admin
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: "secret"
    ports:
      - "33062:3306"
    volumes:
      - mysql-admins:/var/lib/mysql
      - ./DB-Admins/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
  mysql-users:
    image: mysql
    container_name: mysql-users
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: "secret"
    ports:
      - "33063:3306"
    volumes:
      - mysql-users:/var/lib/mysql
      - ./DB-Users/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
  redis:
    image: redis
    container_name: redis
    restart: always
    ports:
      - "63790:6379"
  proxy:
    image: nginx
    container_name: proxy-services
    expose:
      - 80
    ports:
      - "8000:80"
    volumes:
      - ./Proxy-Services/default.conf:/etc/nginx/conf.d/default.conf:ro
  logger: 
    build: ./Logger
    container_name: logger
    restart: always
    ports:
      - "3005:3005"
      - "8002:8002"
  service-api:
    depends_on:
      - mysql-api
      - redis
      - proxy
    build: ./Service-API
    container_name: service-api
    restart: always
    ports:
      - "3000:3000"
  service-users:
    depends_on:
      - mysql-users
      - proxy
    build: ./Service-Users
    container_name: service-users
    restart: always
    ports:
      - "3001:3001"
  service-admin:
    depends_on:
      - mysql-admin
      - proxy
    build: ./Service-Admins
    container_name: service-admins
    restart: always
    ports:
      - "3002:3002"
